/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package editortexto;

import java.awt.*;
import java.awt.Graphics;
import java.awt.GraphicsEnvironment;
import java.awt.PrintJob;
import java.awt.Toolkit;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.net.URI;
import java.net.URLEncoder;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.*;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author TECMM PROFESOR
 */
public class EditorVentNueva extends javax.swing.JFrame {
    
    String ruta = "";
    String titulo;
    private int posicionUltimaBusqueda=0;

    /**
     * Creates new form Editor
     */
    public EditorVentNueva() {
        initComponents();
        titulo = "Sin titulo";
        setTitle(titulo + ": Editor");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txtaContenido = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        mnuFile = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        mnuVentanaNueva = new javax.swing.JMenuItem();
        mnuFileOpen = new javax.swing.JMenuItem();
        mnuFileSave = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuItem8 = new javax.swing.JMenuItem();
        mnuEdit = new javax.swing.JMenu();
        mnuDeshacer = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        mnuCortar = new javax.swing.JMenuItem();
        mnuCopiar = new javax.swing.JMenuItem();
        mnuPegar = new javax.swing.JMenuItem();
        mnuEliminar = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        mnuBuscarWeb = new javax.swing.JMenuItem();
        mnuBuscar = new javax.swing.JMenuItem();
        jMenuItem16 = new javax.swing.JMenuItem();
        jMenuItem17 = new javax.swing.JMenuItem();
        jMenuItem18 = new javax.swing.JMenuItem();
        jMenuItem19 = new javax.swing.JMenuItem();
        jSeparator5 = new javax.swing.JPopupMenu.Separator();
        mnuSelecTodo = new javax.swing.JMenuItem();
        mnuFechaHora = new javax.swing.JMenuItem();
        mnuFormat = new javax.swing.JMenu();
        Fuente = new javax.swing.JMenuItem();
        FUENTES = new javax.swing.JMenuItem();
        mnuView = new javax.swing.JMenu();
        jMenu1 = new javax.swing.JMenu();
        mnuTa6 = new javax.swing.JMenuItem();
        mnuTa8 = new javax.swing.JMenuItem();
        mnuTa10 = new javax.swing.JMenuItem();
        mnuTa12 = new javax.swing.JMenuItem();
        mnuTa14 = new javax.swing.JMenuItem();
        mnuTa18 = new javax.swing.JMenuItem();
        mnuTa24 = new javax.swing.JMenuItem();
        mnuTa36 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        mnuSDLa = new javax.swing.JMenuItem();
        mnuHelp = new javax.swing.JMenu();
        mnuAyuda = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setBackground(new java.awt.Color(204, 102, 255));

        txtaContenido.setColumns(20);
        txtaContenido.setRows(5);
        jScrollPane1.setViewportView(txtaContenido);

        mnuFile.setMnemonic('A');
        mnuFile.setText("Archivo");
        mnuFile.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                mnuFileAncestorRemoved(evt);
            }
        });

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/nuevo.png"))); // NOI18N
        jMenuItem1.setText("Nuevo");
        mnuFile.add(jMenuItem1);

        mnuVentanaNueva.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.SHIFT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mnuVentanaNueva.setText("Ventana nueva");
        mnuVentanaNueva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuVentanaNuevaActionPerformed(evt);
            }
        });
        mnuFile.add(mnuVentanaNueva);

        mnuFileOpen.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mnuFileOpen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/abrir.png"))); // NOI18N
        mnuFileOpen.setText("Abrir...");
        mnuFileOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuFileOpenActionPerformed(evt);
            }
        });
        mnuFile.add(mnuFileOpen);

        mnuFileSave.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mnuFileSave.setText("Guardar");
        mnuFileSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuFileSaveActionPerformed(evt);
            }
        });
        mnuFile.add(mnuFileSave);

        jMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem5.setText("Guardar como...");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        mnuFile.add(jMenuItem5);
        mnuFile.add(jSeparator1);

        jMenuItem6.setText("Configurar página");
        mnuFile.add(jMenuItem6);

        jMenuItem7.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem7.setText("Imprimir");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        mnuFile.add(jMenuItem7);
        mnuFile.add(jSeparator2);

        jMenuItem8.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem8.setText("Salir");
        jMenuItem8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuItem8MouseClicked(evt);
            }
        });
        mnuFile.add(jMenuItem8);

        jMenuBar1.add(mnuFile);

        mnuEdit.setMnemonic('e');
        mnuEdit.setText("Edición");

        mnuDeshacer.setText("Deshacer");
        mnuDeshacer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuDeshacerActionPerformed(evt);
            }
        });
        mnuEdit.add(mnuDeshacer);
        mnuEdit.add(jSeparator3);

        mnuCortar.setText("Cortar");
        mnuCortar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuCortarActionPerformed(evt);
            }
        });
        mnuEdit.add(mnuCortar);

        mnuCopiar.setText("Copiar");
        mnuCopiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuCopiarActionPerformed(evt);
            }
        });
        mnuEdit.add(mnuCopiar);

        mnuPegar.setText("Pegar");
        mnuPegar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuPegarActionPerformed(evt);
            }
        });
        mnuEdit.add(mnuPegar);

        mnuEliminar.setText("Eliminar");
        mnuEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuEliminarActionPerformed(evt);
            }
        });
        mnuEdit.add(mnuEliminar);
        mnuEdit.add(jSeparator4);

        mnuBuscarWeb.setText("Buscar en web");
        mnuBuscarWeb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuBuscarWebActionPerformed(evt);
            }
        });
        mnuEdit.add(mnuBuscarWeb);

        mnuBuscar.setText("Buscar...");
        mnuBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuBuscarActionPerformed(evt);
            }
        });
        mnuEdit.add(mnuBuscar);

        jMenuItem16.setText("Buscar siguiente");
        jMenuItem16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem16ActionPerformed(evt);
            }
        });
        mnuEdit.add(jMenuItem16);

        jMenuItem17.setText("Buscar anterior");
        mnuEdit.add(jMenuItem17);

        jMenuItem18.setText("Reemplazar");
        mnuEdit.add(jMenuItem18);

        jMenuItem19.setText("Ir a...");
        mnuEdit.add(jMenuItem19);
        mnuEdit.add(jSeparator5);

        mnuSelecTodo.setText("Seleccionar todo");
        mnuSelecTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuSelecTodoActionPerformed(evt);
            }
        });
        mnuEdit.add(mnuSelecTodo);

        mnuFechaHora.setText("Hora y fecha");
        mnuFechaHora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuFechaHoraActionPerformed(evt);
            }
        });
        mnuEdit.add(mnuFechaHora);

        jMenuBar1.add(mnuEdit);

        mnuFormat.setMnemonic('f');
        mnuFormat.setText("Formato");

        Fuente.setText("Fuente");
        Fuente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FuenteActionPerformed(evt);
            }
        });
        mnuFormat.add(Fuente);

        FUENTES.setText("Fuentes...");
        FUENTES.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FUENTESActionPerformed(evt);
            }
        });
        mnuFormat.add(FUENTES);

        jMenuBar1.add(mnuFormat);

        mnuView.setMnemonic('v');
        mnuView.setText("Ver");

        jMenu1.setText("Zoom");

        mnuTa6.setText("6");
        mnuTa6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuTa6ActionPerformed(evt);
            }
        });
        jMenu1.add(mnuTa6);

        mnuTa8.setText("8");
        mnuTa8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuTa8ActionPerformed(evt);
            }
        });
        jMenu1.add(mnuTa8);

        mnuTa10.setText("10");
        mnuTa10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuTa10ActionPerformed(evt);
            }
        });
        jMenu1.add(mnuTa10);

        mnuTa12.setText("12");
        mnuTa12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuTa12ActionPerformed(evt);
            }
        });
        jMenu1.add(mnuTa12);

        mnuTa14.setText("14");
        mnuTa14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuTa14ActionPerformed(evt);
            }
        });
        jMenu1.add(mnuTa14);

        mnuTa18.setText("18");
        mnuTa18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuTa18ActionPerformed(evt);
            }
        });
        jMenu1.add(mnuTa18);

        mnuTa24.setText("24");
        mnuTa24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuTa24ActionPerformed(evt);
            }
        });
        jMenu1.add(mnuTa24);

        mnuTa36.setText("36");
        mnuTa36.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuTa36ActionPerformed(evt);
            }
        });
        jMenu1.add(mnuTa36);

        mnuView.add(jMenu1);

        jMenu2.setText("Salto de linea");

        mnuSDLa.setText("Al final");
        mnuSDLa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuSDLaActionPerformed(evt);
            }
        });
        jMenu2.add(mnuSDLa);

        mnuView.add(jMenu2);

        jMenuBar1.add(mnuView);

        mnuHelp.setMnemonic('y');
        mnuHelp.setText("Ayuda");

        mnuAyuda.setText("Ir a la ayuda");
        mnuAyuda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuAyudaActionPerformed(evt);
            }
        });
        mnuHelp.add(mnuAyuda);

        jMenuBar1.add(mnuHelp);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem16ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem16ActionPerformed

    private void mnuFileSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuFileSaveActionPerformed
        JFileChooser fc = new JFileChooser();
        //Verificar que haya algo para guardar
        String texto = txtaContenido.getText();
        if (texto.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No hay texto para guardar", "Aviso", JOptionPane.WARNING_MESSAGE);
        } else {
            if (!ruta.isEmpty()) {
                try {
                    PrintWriter pw = new PrintWriter(new File(ruta));
                    pw.print(txtaContenido.getText());
                    pw.close();
                } catch (Exception e) {
                }
            } else {
                
                fc.addChoosableFileFilter(new FileNameExtensionFilter(
                        "*.txt", "txt", "Todos los archivos"));
                int seleccion = fc.showSaveDialog(null);
                try {
                    if (seleccion == JFileChooser.APPROVE_OPTION) {
                        File JFC = fc.getSelectedFile();
                        String path = JFC.getAbsolutePath();
                        PrintWriter pw = new PrintWriter(JFC);
                        pw.print(txtaContenido.getText());
                        pw.close();

                        //Comprobar la asignacion de la extension
                        if (!path.endsWith(".txt")) {
                            File temp = new File(path + ".txt");
                            JFC.renameTo(temp);
                        }
                        JOptionPane.showMessageDialog(this, "Archivo guardado correctamente", "Aviso", JOptionPane.INFORMATION_MESSAGE);
                        titulo = JFC.getName();
                        this.setTitle(titulo + ": Editor");
                        
                        ruta = JFC.getPath();
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "Error al guardar el archivo", "Aviso", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_mnuFileSaveActionPerformed

    private void mnuFileOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuFileOpenActionPerformed
        String path = "";
        JFileChooser JFC = new JFileChooser();
        JFC.setFileFilter(new FileNameExtensionFilter("todos los archivos *.TXT", "txt", "TXT"));
        int abrir = JFC.showDialog(null, "Abrir");
        if (abrir == JFileChooser.APPROVE_OPTION) {
            FileReader FR = null;
            BufferedReader BR = null;
            
            try {
                File archivo = JFC.getSelectedFile();//abre un archivo .lengf
                ruta = archivo.getPath();

                String PATH = JFC.getSelectedFile().getAbsolutePath();
                if (PATH.endsWith(".txt") || PATH.endsWith(".TXT")) {
                    
                    FR = new FileReader(archivo);
                    BR = new BufferedReader(FR);
                    
                    String linea;//variable para leer linea por linea el archivo de entrada
                    if (path.compareTo(archivo.getAbsolutePath()) == 0) {
                        JOptionPane.showMessageDialog(this, "Archivo Abierto", "Aviso", JOptionPane.ERROR_MESSAGE);
                        
                    } else {
                        path = archivo.getAbsolutePath();
                        txtaContenido.setText(null);//limpiamos el textArea antes de sobreescribir
                        while ((linea = BR.readLine()) != null) { //cuando termina el texto del archivo?
                            txtaContenido.append(linea + "\n");//utilizamos append para escribir en el textArea
                            
                        }
                        this.setTitle(archivo.getName() + ": Editor");
                    }
                    
                } else {
                    JOptionPane.showMessageDialog(this, "Archivo no soportado", "Aviso", JOptionPane.ERROR_MESSAGE);
                }
                
            } catch (FileNotFoundException ex) {
                ex.printStackTrace();
            } catch (IOException ex) {
                ex.printStackTrace();
            } finally {
                try {
                    if (null != FR) {
                        FR.close();
                    }
                    
                } catch (IOException ex) {
                    ex.printStackTrace();
                    //Logger.getLogger(fileChooser.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_mnuFileOpenActionPerformed

    private void mnuVentanaNuevaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuVentanaNuevaActionPerformed
        new EditorVentNueva().setVisible(true);
    }//GEN-LAST:event_mnuVentanaNuevaActionPerformed

    private void mnuFileAncestorRemoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_mnuFileAncestorRemoved
//POR EL MOMENTO NO HAY NADA
    }//GEN-LAST:event_mnuFileAncestorRemoved

    private void jMenuItem8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem8MouseClicked
// POR EL MOMENTO NO HAY NADA
    }//GEN-LAST:event_jMenuItem8MouseClicked

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
         Properties defaultProps = new Properties();

        PrintJob print = Toolkit.getDefaultToolkit().getPrintJob(this, "Imprimir", defaultProps);
        Graphics g = print.getGraphics();

        if (g != null) {
            g.translate(20, 20);
            txtaContenido.printAll(g); // AreaPrograma es JTextArea
        }
        g.dispose();
        print.end();
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void FuenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FuenteActionPerformed
GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
        String fuentes[] = ge.getAvailableFontFamilyNames();
        for (String fuente : fuentes) {
            System.out.println(fuente + "");
        }        
    }//GEN-LAST:event_FuenteActionPerformed

    private void FUENTESActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FUENTESActionPerformed
        new Fuente(txtaContenido).setVisible(true);
    }//GEN-LAST:event_FUENTESActionPerformed

    private void mnuTa6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuTa6ActionPerformed
        int tamaño=12;
        tamaño=tamaño-6;
        Font fuente=txtaContenido.getFont();
        txtaContenido.setFont(new Font (fuente.getFontName(), fuente.getStyle(), tamaño));
    }//GEN-LAST:event_mnuTa6ActionPerformed

    private void mnuTa8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuTa8ActionPerformed
        int tamaño=12;
        tamaño=tamaño-4;
        Font fuente=txtaContenido.getFont();
        txtaContenido.setFont(new Font (fuente.getFontName(), fuente.getStyle(), tamaño));
    }//GEN-LAST:event_mnuTa8ActionPerformed

    private void mnuTa10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuTa10ActionPerformed
        int tamaño=12;
        tamaño=tamaño-2;
        Font fuente=txtaContenido.getFont();
        txtaContenido.setFont(new Font (fuente.getFontName(), fuente.getStyle(), tamaño));
    }//GEN-LAST:event_mnuTa10ActionPerformed

    private void mnuTa12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuTa12ActionPerformed
        int tamaño=12;
        Font fuente=txtaContenido.getFont();
        txtaContenido.setFont(new Font (fuente.getFontName(), fuente.getStyle(), tamaño));
    }//GEN-LAST:event_mnuTa12ActionPerformed

    private void mnuTa14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuTa14ActionPerformed
        int tamaño=12;
        tamaño=tamaño+2;
        Font fuente=txtaContenido.getFont();
        txtaContenido.setFont(new Font (fuente.getFontName(), fuente.getStyle(), tamaño));
    }//GEN-LAST:event_mnuTa14ActionPerformed

    private void mnuTa18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuTa18ActionPerformed
        int tamaño=12;
        tamaño=tamaño+6;
        Font fuente=txtaContenido.getFont();
        txtaContenido.setFont(new Font (fuente.getFontName(), fuente.getStyle(), tamaño));
    }//GEN-LAST:event_mnuTa18ActionPerformed

    private void mnuTa24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuTa24ActionPerformed
        int tamaño=12;
        tamaño=tamaño+12;
        Font fuente=txtaContenido.getFont();
        txtaContenido.setFont(new Font (fuente.getFontName(), fuente.getStyle(), tamaño));
    }//GEN-LAST:event_mnuTa24ActionPerformed

    private void mnuTa36ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuTa36ActionPerformed
        int tamaño=12;
        tamaño=tamaño+24;
        Font fuente=txtaContenido.getFont();
        txtaContenido.setFont(new Font (fuente.getFontName(), fuente.getStyle(), tamaño));
    }//GEN-LAST:event_mnuTa36ActionPerformed

    private void mnuSDLaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuSDLaActionPerformed
        String SDL= txtaContenido.getText();
        SDL=SDL.replaceAll("\\r?\\n", "\r\n");
        txtaContenido.setText(SDL);
        
    }//GEN-LAST:event_mnuSDLaActionPerformed

    private void mnuAyudaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuAyudaActionPerformed
        abrirURL("https://support.microsoft.com/es-ES");
    }//GEN-LAST:event_mnuAyudaActionPerformed

    private void mnuCortarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuCortarActionPerformed
        txtaContenido.cut();
    }//GEN-LAST:event_mnuCortarActionPerformed

    private void mnuCopiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuCopiarActionPerformed
        txtaContenido.copy();
    }//GEN-LAST:event_mnuCopiarActionPerformed

    private void mnuPegarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuPegarActionPerformed
        txtaContenido.paste();
    }//GEN-LAST:event_mnuPegarActionPerformed

    private void mnuDeshacerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuDeshacerActionPerformed
        txtaContenido.setText("");
    }//GEN-LAST:event_mnuDeshacerActionPerformed

    private void mnuEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuEliminarActionPerformed
        delete();
    }//GEN-LAST:event_mnuEliminarActionPerformed

    private void mnuSelecTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuSelecTodoActionPerformed
        txtaContenido.selectAll();
    }//GEN-LAST:event_mnuSelecTodoActionPerformed

    private void mnuFechaHoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuFechaHoraActionPerformed
        FechaHora();
    }//GEN-LAST:event_mnuFechaHoraActionPerformed

    private void mnuBuscarWebActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuBuscarWebActionPerformed
        buscarEnWeb();
    }//GEN-LAST:event_mnuBuscarWebActionPerformed

    private void mnuBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuBuscarActionPerformed
      new BusquedaTextoo().setVisible(true);
        
    }//GEN-LAST:event_mnuBuscarActionPerformed

    private void buscarEnWeb() {
        String textoSeleccionado = txtaContenido.getSelectedText();
        if (textoSeleccionado != null && !textoSeleccionado.isEmpty()) {
            try {
                // URL de búsqueda en Google
                String urlBusqueda = "https://www.google.com/search?q=" + URLEncoder.encode(textoSeleccionado, "UTF-8");
                Desktop.getDesktop().browse(new URI(urlBusqueda));
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }
    private void FechaHora() {
        // obtener la fecha y la hora actual
        Date fechaHoraActual = new Date();

        // se formatea la fecha y hora
        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        String fechaHoraFormateada = formato.format(fechaHoraActual);

        // la colocamos en txtaContenido
        txtaContenido.append(fechaHoraFormateada + "\n");
    }
    private void delete() {
        String delate = txtaContenido.getSelectedText();
        if (delate != null && !delate.isEmpty()) {
            txtaContenido.replaceSelection("");
        }
    }
    private void abrirURL(String url) {
        try {
            Desktop.getDesktop().browse(new java.net.URI(url));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditorVentNueva.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditorVentNueva.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditorVentNueva.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditorVentNueva.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditorVentNueva().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem FUENTES;
    private javax.swing.JMenuItem Fuente;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem16;
    private javax.swing.JMenuItem jMenuItem17;
    private javax.swing.JMenuItem jMenuItem18;
    private javax.swing.JMenuItem jMenuItem19;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JPopupMenu.Separator jSeparator5;
    private javax.swing.JMenuItem mnuAyuda;
    private javax.swing.JMenuItem mnuBuscar;
    private javax.swing.JMenuItem mnuBuscarWeb;
    private javax.swing.JMenuItem mnuCopiar;
    private javax.swing.JMenuItem mnuCortar;
    private javax.swing.JMenuItem mnuDeshacer;
    private javax.swing.JMenu mnuEdit;
    private javax.swing.JMenuItem mnuEliminar;
    private javax.swing.JMenuItem mnuFechaHora;
    private javax.swing.JMenu mnuFile;
    private javax.swing.JMenuItem mnuFileOpen;
    private javax.swing.JMenuItem mnuFileSave;
    private javax.swing.JMenu mnuFormat;
    private javax.swing.JMenu mnuHelp;
    private javax.swing.JMenuItem mnuPegar;
    private javax.swing.JMenuItem mnuSDLa;
    private javax.swing.JMenuItem mnuSelecTodo;
    private javax.swing.JMenuItem mnuTa10;
    private javax.swing.JMenuItem mnuTa12;
    private javax.swing.JMenuItem mnuTa14;
    private javax.swing.JMenuItem mnuTa18;
    private javax.swing.JMenuItem mnuTa24;
    private javax.swing.JMenuItem mnuTa36;
    private javax.swing.JMenuItem mnuTa6;
    private javax.swing.JMenuItem mnuTa8;
    private javax.swing.JMenuItem mnuVentanaNueva;
    private javax.swing.JMenu mnuView;
    private javax.swing.JTextArea txtaContenido;
    // End of variables declaration//GEN-END:variables
}
